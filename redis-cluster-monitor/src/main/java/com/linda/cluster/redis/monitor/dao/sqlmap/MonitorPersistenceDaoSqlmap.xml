<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linda.cluster.redis.monitor.dao.MonitorPersistenceDao">

	<insert id="add" parameterType="monitorPersistence">
		insert into redis_monitor_persistence(productId,clusterId,redisNodeId,addtime,rdb_changes_since_last_save,rdb_bgsave_in_progress,rdb_last_save_time,rdb_last_bgsave_status,
		rdb_last_bgsave_time_sec,rdb_current_bgsave_time_sec,aof_enabled,aof_rewrite_in_progress,aof_rewrite_scheduled,aof_last_rewrite_time_sec,aof_current_rewrite_time_sec,
		aof_last_bgrewrite_status,aof_last_write_status)
		values(#{productId},#{clusterId},#{redisNodeId},#{addtime},#{rdb_changes_since_last_save},#{rdb_bgsave_in_progress},#{rdb_last_save_time},#{rdb_last_bgsave_status},
		#{rdb_last_bgsave_time_sec},#{rdb_current_bgsave_time_sec},#{aof_enabled},#{aof_rewrite_in_progress},#{aof_rewrite_scheduled},#{aof_last_rewrite_time_sec},
		#{aof_current_rewrite_time_sec},#{aof_last_bgrewrite_status},#{aof_last_write_status})
	</insert>
	
	<select id="getByProductAndTime" resultType="monitorPersistence">
		select * from redis_monitor_persistence where productId=#{productId} and addtime&gt;#{start} and addtime&lt;#{end} order by addtime asc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByProductAndTime" resultType="int">
		select count(*) from redis_monitor_persistence where productId=#{productId} and addtime&gt;#{start} and addtime&lt;#{end}
	</select>
	
	<select id="getByClusterAndTime" resultType="monitorPersistence">
		select * from redis_monitor_persistence where clusterId=#{clusterId} and addtime&gt;#{start} and addtime&lt;#{end} order by addtime asc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByClusterAndTime" resultType="int">
		select count(*) from redis_monitor_persistence where clusterId=#{clusterId} and addtime&gt;#{start} and addtime&lt;#{end}
	</select>
	
	<select id="getByNodeAndTime" resultType="monitorPersistence">
		select * from redis_monitor_persistence where nodeId=#{nodeId} and addtime&gt;#{start} and addtime&lt;#{end} order by addtime asc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByNodeAndTime" resultType="int">
		select count(*) from redis_monitor_persistence where nodeId=#{nodeId} and addtime&gt;#{start} and addtime&lt;#{end}
	</select>
	
</mapper> 